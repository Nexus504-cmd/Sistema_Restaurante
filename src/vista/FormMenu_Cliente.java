/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import ConexionPGadmin.Conexion;
import Logica.Administrador;
import Logica.Bebidas;
import Logica.Observable;
import Logica.Segundos;
import Logica.Sopas;
import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arana
 */
public class FormMenu_Cliente extends javax.swing.JFrame {

    Administrador admin = new Administrador();

    /**
     * Creates new form Menu
     */
    public FormMenu_Cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaMenu = new javax.swing.JTable();
        Boton_sopas = new javax.swing.JButton();
        BotonMenu = new javax.swing.JButton();
        Boton_segundos = new javax.swing.JButton();
        Boton_bebidas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TablaMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Plato", "Tipo", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaMenu);
        if (TablaMenu.getColumnModel().getColumnCount() > 0) {
            TablaMenu.getColumnModel().getColumn(0).setResizable(false);
        }

        Boton_sopas.setText("Mostrar Sopas");
        Boton_sopas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_sopasActionPerformed(evt);
            }
        });

        BotonMenu.setText("MostrarMenu");
        BotonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenuActionPerformed(evt);
            }
        });

        Boton_segundos.setText("Mostrar Segundos");
        Boton_segundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_segundosActionPerformed(evt);
            }
        });

        Boton_bebidas.setText("Mostrar Bebidas");
        Boton_bebidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_bebidasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(BotonMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Boton_segundos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Boton_bebidas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Boton_sopas, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Boton_sopas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Boton_segundos)
                        .addGap(18, 18, 18)
                        .addComponent(Boton_bebidas)
                        .addGap(18, 18, 18)
                        .addComponent(BotonMenu))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_bebidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_bebidasActionPerformed
        // TODO add your handling code here:
        TablaMenu.setModel(verBebidas());
    }//GEN-LAST:event_Boton_bebidasActionPerformed

    private void Boton_segundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_segundosActionPerformed
        // TODO add your handling code here:
        TablaMenu.setModel(verSegundos());
    }//GEN-LAST:event_Boton_segundosActionPerformed

    private void BotonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenuActionPerformed
        // TODO add your handling code here:
        TablaMenu.setModel(Observable.vermenu());
    }//GEN-LAST:event_BotonMenuActionPerformed

    private void Boton_sopasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_sopasActionPerformed
        TablaMenu.setModel(verSopas());
    }//GEN-LAST:event_Boton_sopasActionPerformed

    /**
     * @param args the command line arguments
     */
    private void mostrarMenu() {
        TablaMenu.setModel(Observable.vermenu());
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonMenu;
    private javax.swing.JButton Boton_bebidas;
    private javax.swing.JButton Boton_segundos;
    private javax.swing.JButton Boton_sopas;
    private javax.swing.JTable TablaMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel verSopas() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Plato");
        modelo.addColumn("Tipo");
        modelo.addColumn("Precio");
        String sql = "select id_producto, nombre, tipo, precio from productos where tipo = 'Sopa' and estado = 'true'";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql)) {

            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Object fila[] = {
                    rs.getInt("id_producto"),
                    rs.getString("nombre"),
                    rs.getString("tipo"),
                    rs.getDouble("precio")
                };
                modelo.addRow(fila);
            }

        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());

        }
        return modelo;

    }

    private DefaultTableModel verSegundos() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Plato");
        modelo.addColumn("Tipo");
        modelo.addColumn("Precio");
        String sql = "select id_producto, nombre, tipo, precio from productos where tipo = 'Segundo' and estado = 'true'";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql)) {

            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Object fila[] = {
                    rs.getInt("id_producto"),
                    rs.getString("nombre"),
                    rs.getString("tipo"),
                    rs.getDouble("precio")
                };
                modelo.addRow(fila);
            }

        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());

        }
        return modelo;
    }

    private DefaultTableModel verBebidas() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Plato");
        modelo.addColumn("Tipo");
        modelo.addColumn("Precio");
        String sql = "select id_producto, nombre, tipo, precio from productos where tipo = 'Bebida' and estado = 'true'";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql)) {

            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Object fila[] = {
                    rs.getInt("id_producto"),
                    rs.getString("nombre"),
                    rs.getString("tipo"),
                    rs.getDouble("precio")
                };
                modelo.addRow(fila);
            }

        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());

        }
        return modelo;
    }


}
