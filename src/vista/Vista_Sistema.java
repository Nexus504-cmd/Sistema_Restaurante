/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import ConexionPGadmin.Conexion;
import Logica.Cliente;
import java.math.BigDecimal;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arana
 */
public class Vista_Sistema extends javax.swing.JFrame {

    Cliente c = null;

    /**
     * Creates new form Vista_Sistema
     */
    public Vista_Sistema() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Clientes_GenerarPedido = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        Campo_Nombre_Cliente = new javax.swing.JTextField();
        Campo_ID_cliente = new javax.swing.JTextField();
        Boton_Actualizar_Cliente = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla_Reservacion = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Campo_ID_mesa_Reservacion = new javax.swing.JTextField();
        Boton_Agregar_Reservacion = new javax.swing.JButton();
        Boton_Actualizar_Reservacion = new javax.swing.JButton();
        Boton_Generar_Cliente = new javax.swing.JButton();
        Boton_Agregar_Cliente = new javax.swing.JButton();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Campo_ID_producto_orden = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        Area_ResgistroPedidos = new javax.swing.JTextArea();
        Boton_registrar_pedido = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Campo_ID_producto_orden_modificaciones = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        Area_Modificaciones = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        Lista_Estado_modificacioens = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        Campo_ID_producto_orden_modificaciones_id_cambio = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        Tabla_modificaciones_ordenes = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        Tabla_ordenes_registro = new javax.swing.JTable();
        Boton_Actualizar_ordenes = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        Campo_ID_cliente_pedidos = new javax.swing.JTextField();
        Boton_Buscar_ordenes = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        Campo_ID_cliente_modificaciones = new javax.swing.JTextField();
        Boton_Actualizar_modificaciones = new javax.swing.JButton();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ID_cliente_pago = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        Boton_burscar_pago = new javax.swing.JButton();
        Boton_Administrador = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("RESTAURANTE");

        jLabel2.setText("CLIENTE-PEDIDO");

        jLabel3.setText("NOMBRE: ");

        Tabla_Clientes_GenerarPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID_CLIENTE", "NOMBRE", "PEDIDO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla_Clientes_GenerarPedido);

        jLabel4.setText("ID: ");

        Campo_ID_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Campo_ID_clienteActionPerformed(evt);
            }
        });

        Boton_Actualizar_Cliente.setText("Actualizar");
        Boton_Actualizar_Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Actualizar_ClienteActionPerformed(evt);
            }
        });

        Tabla_Reservacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID_Cliente", "Nombre", "Mesa", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabla_Reservacion);

        jLabel5.setText("RESERVACION");

        jLabel6.setText("ID_Mesa: ");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        Campo_ID_mesa_Reservacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Campo_ID_mesa_ReservacionActionPerformed(evt);
            }
        });

        Boton_Agregar_Reservacion.setText("Agregar");
        Boton_Agregar_Reservacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Agregar_ReservacionActionPerformed(evt);
            }
        });

        Boton_Actualizar_Reservacion.setText("Actualizar");
        Boton_Actualizar_Reservacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Actualizar_ReservacionActionPerformed(evt);
            }
        });

        Boton_Generar_Cliente.setText("Generar");
        Boton_Generar_Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Generar_ClienteActionPerformed(evt);
            }
        });

        Boton_Agregar_Cliente.setText("Agregar");
        Boton_Agregar_Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Agregar_ClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Campo_ID_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(Campo_Nombre_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(Campo_ID_mesa_Reservacion, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Boton_Agregar_Reservacion)
                                .addGap(64, 64, 64)
                                .addComponent(Boton_Actualizar_Reservacion)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(28, 28, 28))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Boton_Agregar_Cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(Boton_Generar_Cliente)
                        .addGap(36, 36, 36)
                        .addComponent(Boton_Actualizar_Cliente)
                        .addGap(484, 484, 484))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Campo_ID_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Campo_Nombre_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Boton_Actualizar_Cliente)
                    .addComponent(Boton_Generar_Cliente)
                    .addComponent(Boton_Agregar_Cliente))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Campo_ID_mesa_Reservacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Boton_Agregar_Reservacion)
                            .addComponent(Boton_Actualizar_Reservacion))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jDesktopPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("CLIENTE", jDesktopPane1);

        jLabel7.setText("REGISTRO DE PEDIDOS");

        jLabel8.setText("ID_PRODUCTO");

        Area_ResgistroPedidos.setColumns(20);
        Area_ResgistroPedidos.setRows(5);
        jScrollPane4.setViewportView(Area_ResgistroPedidos);

        Boton_registrar_pedido.setText("Registrar");
        Boton_registrar_pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_registrar_pedidoActionPerformed(evt);
            }
        });

        jLabel9.setText("MODIFICACIONES");

        jLabel10.setText("ID_PRODUCTO");

        Area_Modificaciones.setColumns(20);
        Area_Modificaciones.setRows(5);
        jScrollPane5.setViewportView(Area_Modificaciones);

        jLabel11.setText("ESTADO");

        Lista_Estado_modificacioens.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cambiado", "Eliminado", "Registrado" }));
        Lista_Estado_modificacioens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Lista_Estado_modificacioensActionPerformed(evt);
            }
        });

        jLabel12.setText("ID_CAMBIO");

        Campo_ID_producto_orden_modificaciones_id_cambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Campo_ID_producto_orden_modificaciones_id_cambioActionPerformed(evt);
            }
        });

        Tabla_modificaciones_ordenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID_orden", "ID_producto", "Nombre", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(Tabla_modificaciones_ordenes);

        Tabla_ordenes_registro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID_orden", "ID_Producto", "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(Tabla_ordenes_registro);

        Boton_Actualizar_ordenes.setText("Actualizar");
        Boton_Actualizar_ordenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Actualizar_ordenesActionPerformed(evt);
            }
        });

        jLabel15.setText("ID_Cliente");

        Boton_Buscar_ordenes.setText("Buscar");
        Boton_Buscar_ordenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Buscar_ordenesActionPerformed(evt);
            }
        });

        jLabel16.setText("ID_Cliente");

        Boton_Actualizar_modificaciones.setText("Actualizar");
        Boton_Actualizar_modificaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Actualizar_modificacionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Campo_ID_producto_orden_modificaciones_id_cambio, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Campo_ID_producto_orden_modificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Campo_ID_cliente_modificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Lista_Estado_modificacioens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Boton_Actualizar_modificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(Boton_Actualizar_ordenes, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Boton_registrar_pedido)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Campo_ID_producto_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Campo_ID_cliente_pedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(Boton_Buscar_ordenes, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(347, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(16, 16, 16)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(Boton_Buscar_ordenes))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(Campo_ID_cliente_pedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Campo_ID_producto_orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Boton_registrar_pedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Boton_Actualizar_ordenes)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Lista_Estado_modificacioens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(Campo_ID_cliente_modificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Campo_ID_producto_orden_modificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Campo_ID_producto_orden_modificaciones_id_cambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(Boton_Actualizar_modificaciones))
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(286, Short.MAX_VALUE)))
        );

        jDesktopPane2.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("ORDEN", jDesktopPane2);

        jLabel13.setText("REGISTRO DE PAGO");

        jLabel14.setText("ID_CLIENTE");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID_cliente", "Nombre", "ID_pedido", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTable3);

        Boton_burscar_pago.setText("BUSCAR");
        Boton_burscar_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_burscar_pagoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ID_cliente_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Boton_burscar_pago))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ID_cliente_pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Boton_burscar_pago)))
                .addContainerGap(421, Short.MAX_VALUE))
        );

        jDesktopPane3.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("PAGO", jDesktopPane3);

        Boton_Administrador.setText("Admin");
        Boton_Administrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_AdministradorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(464, 464, 464)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(Boton_Administrador, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(Boton_Administrador)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Campo_ID_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Campo_ID_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Campo_ID_clienteActionPerformed

    private void Boton_Actualizar_ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Actualizar_ClienteActionPerformed
        Tabla_Clientes_GenerarPedido.setModel(observarclientepedidos());
    }//GEN-LAST:event_Boton_Actualizar_ClienteActionPerformed

    private void Campo_ID_mesa_ReservacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Campo_ID_mesa_ReservacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Campo_ID_mesa_ReservacionActionPerformed

    private void Boton_Agregar_ReservacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Agregar_ReservacionActionPerformed
        // TODO add your handling code here:
        //query para actualizar el null de mesa
        String sql3 = "insert into mesa(id_mesa,actividad) values (?,?)";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql3);) {
            stmt.setInt(1, Integer.parseInt(Campo_ID_mesa_Reservacion.getText()));
            stmt.setBoolean(2, true);
            stmt.execute();

        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());

        }
    }//GEN-LAST:event_Boton_Agregar_ReservacionActionPerformed

    private void Boton_Actualizar_ReservacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Actualizar_ReservacionActionPerformed
        Tabla_Reservacion.setModel(observarMesaReservacion());

    }//GEN-LAST:event_Boton_Actualizar_ReservacionActionPerformed

    private void Boton_Generar_ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Generar_ClienteActionPerformed
        //queary para llamar al cliente
        String sql = "select * from clientes where id_cliente =?";

        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, Integer.parseInt(Campo_ID_cliente.getText()));

            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    c = new Cliente(
                            rs.getString("nombre"),
                            0,
                            "null",
                            0,
                            rs.getInt("id_cliente")
                    );
                }
            }

        } catch (SQLException e) {
            System.out.println("ERROR: " + e.getMessage());
        }
        //queary para insertar el pedido en la tabla pedidos
        String sql2 = "insert into pedido(id_pedido,actividad,pago) values (?,?,?)";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql2);) {
            stmt.setInt(1, c.getP().getId());
            stmt.setBoolean(2, true);
            stmt.setBigDecimal(3, new BigDecimal(1));
            stmt.execute();

        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
        //queary para actualizar el null de pedidos
        String sql1 = "update clientes set id_pedido = ? where id_cliente = ?";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql1);) {
            stmt.setInt(1, c.getP().getId());
            stmt.setInt(2, c.getId());

            stmt.execute();
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());

        }
    }//GEN-LAST:event_Boton_Generar_ClienteActionPerformed

    private void Lista_Estado_modificacioensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Lista_Estado_modificacioensActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Lista_Estado_modificacioensActionPerformed

    private void Campo_ID_producto_orden_modificaciones_id_cambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Campo_ID_producto_orden_modificaciones_id_cambioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Campo_ID_producto_orden_modificaciones_id_cambioActionPerformed

    private void Boton_AdministradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_AdministradorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Boton_AdministradorActionPerformed

    private void Boton_Agregar_ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Agregar_ClienteActionPerformed
        c = new Cliente(Campo_Nombre_Cliente.getText(), 0, "null", 0, Integer.parseInt(Campo_ID_cliente.getText()));

        //insercion del cliente
        String sql1 = "insert into clientes(id_cliente,nombre,id_pedido,id_mesa) values (?,?,?,?)";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql1);) {
            stmt.setInt(1, c.getId());
            stmt.setString(2, c.getNombre());
            stmt.setNull(3, java.sql.Types.INTEGER);
            stmt.setNull(4, java.sql.Types.INTEGER);
            stmt.execute();
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());

        }

    }//GEN-LAST:event_Boton_Agregar_ClienteActionPerformed

    private void Boton_Actualizar_ordenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Actualizar_ordenesActionPerformed
        // TODO add your handling code here:
        Tabla_ordenes_registro.setModel(observarordenesregistro());

    }//GEN-LAST:event_Boton_Actualizar_ordenesActionPerformed

    private void Boton_registrar_pedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_registrar_pedidoActionPerformed
        String sql = " insert into orden (id_producto,id_pedido,id_cliente,estado) values (?,?,?,?)";
        c = llamadocliente(Integer.parseInt(Campo_ID_cliente_pedidos.getText()));
        
        try(Connection conn = Conexion.getConexion(); PreparedStatement pstmt = conn.prepareStatement(sql);){
            pstmt.setInt(1, Integer.parseInt(Campo_ID_producto_orden.getText()));
            pstmt.setInt(2, c.getP().getId());
            pstmt.setInt(3, c.getId());
            pstmt.setString(4, "Proceso");
            
            pstmt.execute();
        }catch(SQLException e){
            System.out.println("Mensaje: "+ e.getMessage());
        }
              
    }//GEN-LAST:event_Boton_registrar_pedidoActionPerformed

    private void Boton_Buscar_ordenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Buscar_ordenesActionPerformed
       Tabla_ordenes_registro.setModel(observarordenesregistro());
    }//GEN-LAST:event_Boton_Buscar_ordenesActionPerformed

    private void Boton_Actualizar_modificacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Actualizar_modificacionesActionPerformed
        // TODO add your handling code here:
        String sql = "update orden set id_producto = ?, estado = ? where id_orden = ? and id_cliente =?";
        
        try(Connection conn = Conexion.getConexion(); PreparedStatement pstmt = conn.prepareStatement(sql)){
             pstmt.setInt(1, Integer.parseInt(Campo_ID_producto_orden_modificaciones.getText()));
             pstmt.setString(2, (String) Lista_Estado_modificacioens.getSelectedItem());
             pstmt.setInt(3, Integer.parseInt(Campo_ID_producto_orden_modificaciones_id_cambio.getText()));
             pstmt.setInt(4, Integer.parseInt(Campo_ID_cliente_modificaciones.getText()));
             pstmt.execute();
            
        }catch(SQLException e){
            System.out.println("Error: "+e);
            
        }
        
        Tabla_modificaciones_ordenes.setModel(observarordenesmodificaciones());
    }//GEN-LAST:event_Boton_Actualizar_modificacionesActionPerformed

    private void Boton_burscar_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_burscar_pagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Boton_burscar_pagoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista_Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista_Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista_Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista_Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista_Sistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Area_Modificaciones;
    private javax.swing.JTextArea Area_ResgistroPedidos;
    private javax.swing.JButton Boton_Actualizar_Cliente;
    private javax.swing.JButton Boton_Actualizar_Reservacion;
    private javax.swing.JButton Boton_Actualizar_modificaciones;
    private javax.swing.JButton Boton_Actualizar_ordenes;
    private javax.swing.JButton Boton_Administrador;
    private javax.swing.JButton Boton_Agregar_Cliente;
    private javax.swing.JButton Boton_Agregar_Reservacion;
    private javax.swing.JButton Boton_Buscar_ordenes;
    private javax.swing.JButton Boton_Generar_Cliente;
    private javax.swing.JButton Boton_burscar_pago;
    private javax.swing.JButton Boton_registrar_pedido;
    private javax.swing.JTextField Campo_ID_cliente;
    private javax.swing.JTextField Campo_ID_cliente_modificaciones;
    private javax.swing.JTextField Campo_ID_cliente_pedidos;
    private javax.swing.JTextField Campo_ID_mesa_Reservacion;
    private javax.swing.JTextField Campo_ID_producto_orden;
    private javax.swing.JTextField Campo_ID_producto_orden_modificaciones;
    private javax.swing.JTextField Campo_ID_producto_orden_modificaciones_id_cambio;
    private javax.swing.JTextField Campo_Nombre_Cliente;
    private javax.swing.JTextField ID_cliente_pago;
    private javax.swing.JComboBox<String> Lista_Estado_modificacioens;
    private javax.swing.JTable Tabla_Clientes_GenerarPedido;
    private javax.swing.JTable Tabla_Reservacion;
    private javax.swing.JTable Tabla_modificaciones_ordenes;
    private javax.swing.JTable Tabla_ordenes_registro;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel observarMesaReservacion() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID_Cliente");
        modelo.addColumn("Nombre");
        modelo.addColumn("Mesa");
        modelo.addColumn("Estado");
        String sql = "select * from vista_reservacion_tabla ";
        try (Connection conn = Conexion.getConexion(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                Integer id = rs.getObject("id_cliente", Integer.class);
                id = (id == null) ? 0 : id;
                String estado = rs.getBoolean("actividad") ? "Reservado" : "Libre";
                String nombre = rs.getString("nombre");
                nombre = (nombre == null || nombre.trim().isEmpty()) ? "Sin asignar" : nombre;
                Object[] fila = {
                    id,
                    nombre,
                    rs.getInt("id_mesa"),
                    estado
                };
                modelo.addRow(fila);

            }
        } catch (SQLException e) {
            System.out.println("ERROR: " + e.getMessage());
        }
        return modelo;
    }

    private DefaultTableModel observarclientepedidos() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID_CLIENTE");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("PEDIDO");

        String sql = "select * from vista_cliente_pedido_tabla";
        try (Connection conn = Conexion.getConexion(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {

                Integer id = rs.getObject("id_pedido", Integer.class);
                id = (id == null) ? 0 : id;

                Object[] fila = {
                    rs.getInt("id_cliente"),
                    rs.getString("nombre"),
                    id,};
                modelo.addRow(fila);

            }
        } catch (SQLException e) {
            System.out.println("ERROR: " + e.getMessage());
        }
        return modelo;
    }

    private DefaultTableModel observarordenesregistro() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID_orden");
        modelo.addColumn("ID_Producto");
        modelo.addColumn("Nombre");
        modelo.addColumn("Precio");

        String sql = "select o.id_orden, o.id_producto, p.nombre, p.precio from orden as o inner join productos as p on o.id_producto = p.id_producto where o.id_cliente = ?;";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareCall(sql);) {
            stmt.setInt(1, Integer.parseInt(Campo_ID_cliente_pedidos.getText()));

            try (ResultSet rs = stmt.executeQuery()) {
                while (rs.next()) {
                    Object fila[] = {
                        rs.getInt("id_orden"),
                        rs.getInt("id_producto"),
                        rs.getString("nombre"),
                        rs.getDouble("precio")
                    };
                    modelo.addRow(fila);
                }
            }
        } catch (SQLException e) {
            System.out.println("Mensaje: " + e.getMessage());
        }

        return modelo;
    }
    
    private DefaultTableModel observarordenesmodificaciones(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID_orden");
        modelo.addColumn("ID_Producto");
        modelo.addColumn("Nombre");
        modelo.addColumn("Estado");

        String sql = "select o.id_orden, o.id_producto, p.nombre, o.estado from orden as o inner join productos as p on o.id_producto = p.id_producto where o.id_cliente = ?;";
        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareCall(sql);) {
            stmt.setInt(1, Integer.parseInt(Campo_ID_cliente_modificaciones.getText()));

            try (ResultSet rs = stmt.executeQuery()) {
                while (rs.next()) {
                    Object fila[] = {
                        rs.getInt("id_orden"),
                        rs.getInt("id_producto"),
                        rs.getString("nombre"),
                        rs.getString("estado")
                    };
                    modelo.addRow(fila);
                }
            }
        } catch (SQLException e) {
            System.out.println("Mensaje: " + e.getMessage());
        }

        return modelo;
    }
//devuleve un cliente con nombre y id
    private Cliente llamadocliente(int id) {

        String sql = "select * from clientes where id_cliente =?";

        try (Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, id);

            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    c = new Cliente(
                            rs.getString("nombre"),
                            0,
                            "null",
                            0,
                            rs.getInt("id_cliente")
                    );
                }
            }

        } catch (SQLException e) {
            System.out.println("ERROR: " + e.getMessage());
        }
        return c;
    }
}
