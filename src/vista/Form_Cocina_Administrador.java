/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import ConexionPGadmin.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arana
 */
public class Form_Cocina_Administrador extends javax.swing.JFrame {

    /**
     * Creates new form Form_Cocina_Administrador
     */
    public Form_Cocina_Administrador() {
        initComponents();
        Tabla_Pedido.addMouseListener(new java.awt.event.MouseAdapter(){
            @Override
            public void mouseClicked (java.awt.event.MouseEvent evt){
                int fila = Tabla_Pedido.rowAtPoint(evt.getPoint());
                if(fila >= 0){
                    String id_pedido = Tabla_Pedido.getValueAt(fila, 0).toString();
                    Espacio_Relleno_ID_Pedido.setText(id_pedido);
                }
            }
        
        
        });
        Tabla_Orden.addMouseListener(new java.awt.event.MouseAdapter(){
            @Override
            public void mouseClicked (java.awt.event.MouseEvent evt){
                int fila = Tabla_Orden.rowAtPoint(evt.getPoint());
                if(fila >= 0){
                    String id_orden = Tabla_Orden.getValueAt(fila, 0).toString();
                    Espacio_Relleno_ID_Orden.setText(id_orden);
                }
            }
        
        
        });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla_Orden = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Pedido = new javax.swing.JTable();
        Lista_Estado_Pedido = new javax.swing.JComboBox<>();
        Lista_Estado_Orden = new javax.swing.JComboBox<>();
        Boton_Mostrar_Ordenes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Espacio_Relleno_ID_Orden = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Espacio_Relleno_ID_Pedido = new javax.swing.JTextField();
        Boton_Mostrar_Pedidos = new javax.swing.JButton();
        Boton_Actualizar_Plato = new javax.swing.JButton();
        Boton_Actualizar_Pedido = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tabla_Orden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Plato", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabla_Orden);
        if (Tabla_Orden.getColumnModel().getColumnCount() > 0) {
            Tabla_Orden.getColumnModel().getColumn(0).setResizable(false);
            Tabla_Orden.getColumnModel().getColumn(0).setPreferredWidth(0);
        }

        Tabla_Pedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Pedido", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla_Pedido);

        Lista_Estado_Pedido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tomado", "No tomado" }));

        Lista_Estado_Orden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Preparado", "No Preparado" }));

        Boton_Mostrar_Ordenes.setText("Mostrar Ordenes");
        Boton_Mostrar_Ordenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Mostrar_OrdenesActionPerformed(evt);
            }
        });

        jLabel1.setText("Plato");

        jLabel2.setText("Pedido");

        Boton_Mostrar_Pedidos.setText("Mostrar Pedidos");
        Boton_Mostrar_Pedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Mostrar_PedidosActionPerformed(evt);
            }
        });

        Boton_Actualizar_Plato.setText("Actualizar");
        Boton_Actualizar_Plato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Actualizar_PlatoActionPerformed(evt);
            }
        });

        Boton_Actualizar_Pedido.setText("Actualizar");
        Boton_Actualizar_Pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Actualizar_PedidoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("ADMINISTRADOR COCINA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Boton_Mostrar_Ordenes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Boton_Mostrar_Pedidos))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Espacio_Relleno_ID_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Espacio_Relleno_ID_Orden, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Lista_Estado_Orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Lista_Estado_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Boton_Actualizar_Plato)
                                    .addComponent(Boton_Actualizar_Pedido))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(53, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lista_Estado_Orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Espacio_Relleno_ID_Orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(Boton_Actualizar_Plato)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Espacio_Relleno_ID_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lista_Estado_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Boton_Actualizar_Pedido)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Boton_Mostrar_Pedidos)
                            .addComponent(Boton_Mostrar_Ordenes))
                        .addGap(102, 102, 102)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_Mostrar_OrdenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Mostrar_OrdenesActionPerformed
        // TODO add your handling code here:
        Tabla_Orden.setModel(verOrden());
        
        
        
        
    }//GEN-LAST:event_Boton_Mostrar_OrdenesActionPerformed

    private void Boton_Mostrar_PedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Mostrar_PedidosActionPerformed
        // TODO add your handling code here:
        Tabla_Pedido.setModel(verPedidos());
    }//GEN-LAST:event_Boton_Mostrar_PedidosActionPerformed

    private void Boton_Actualizar_PlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Actualizar_PlatoActionPerformed
        // TODO add your handling code here:
        actualizarPlato();
      
    }//GEN-LAST:event_Boton_Actualizar_PlatoActionPerformed

    private void Boton_Actualizar_PedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Actualizar_PedidoActionPerformed
        // TODO add your handling code here:
        actualizarPedido();
    }//GEN-LAST:event_Boton_Actualizar_PedidoActionPerformed

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_Actualizar_Pedido;
    private javax.swing.JButton Boton_Actualizar_Plato;
    private javax.swing.JButton Boton_Mostrar_Ordenes;
    private javax.swing.JButton Boton_Mostrar_Pedidos;
    private javax.swing.JTextField Espacio_Relleno_ID_Orden;
    private javax.swing.JTextField Espacio_Relleno_ID_Pedido;
    private javax.swing.JComboBox<String> Lista_Estado_Orden;
    private javax.swing.JComboBox<String> Lista_Estado_Pedido;
    private javax.swing.JTable Tabla_Orden;
    private javax.swing.JTable Tabla_Pedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel verOrden(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Plato");
        modelo.addColumn("Estado");
        String sql =" select id_orden, nombre, proceso from verordenesestado where id_pedido =?";
        try(Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql)){
            stmt.setInt(1, Integer.parseInt(Espacio_Relleno_ID_Pedido.getText()));
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
                String estado = rs.getBoolean("proceso")? "Preparado":"No Preparado";
                Object fila [] = {
                  rs.getInt("id_orden"),
                  rs.getString("nombre"),
                  estado
                  
                    
                };
                modelo.addRow(fila);
            }
            
        }catch(SQLException e){
            System.out.println("Mensaje: "+ e.getMessage());
        }
        return modelo;
        
    }
    private DefaultTableModel verPedidos(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Pedido");
        modelo.addColumn("Estado");
        String sql =" select *  from verpedidoestado";
        try(Connection conn = Conexion.getConexion(); PreparedStatement stmt = conn.prepareStatement(sql);
                ResultSet rs = stmt.executeQuery()){
          
            while(rs.next()){
                String estado = rs.getBoolean("estado")? "Tomado":"No Tomado";
                Object fila [] = {
                  rs.getInt("id_pedido"),
                  estado
                  
                    
                };
                modelo.addRow(fila);
            }
            
        }catch(SQLException e){
            System.out.println("Mensaje: "+ e.getMessage());
        }
        return modelo;
    }
    private void actualizarPlato(){
        String sql = "update orden set proceso= ? where id_orden= ?";
        
        try(Connection conn = Conexion.getConexion(); PreparedStatement pstmt = conn.prepareStatement(sql)){
            boolean valor = ((String)Lista_Estado_Orden.getSelectedItem()).equals("Preparado");
            pstmt.setBoolean(1, valor);
            pstmt.setInt(2, Integer.parseInt(Espacio_Relleno_ID_Orden.getText()));
            pstmt.execute();
            
        }catch(SQLException e){
            System.out.println("Mensaje: "+e.getMessage());
        }
    }
    private void actualizarPedido(){
        String sql = "update pedido set estado = ? where id_pedido = ?";
        
        try(Connection conn = Conexion.getConexion(); PreparedStatement pstmt = conn.prepareStatement(sql)){
            boolean valor = ((String)Lista_Estado_Pedido.getSelectedItem()).equals("Tomado");
            pstmt.setBoolean(1, valor);
            pstmt.setInt(2, Integer.parseInt(Espacio_Relleno_ID_Pedido.getText()));
            pstmt.execute();
        }catch(SQLException e){
            System.out.println("Mensaje: "+e.getMessage());
        }
    }
}
